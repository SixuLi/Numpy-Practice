# 1. Import the numpy package under the name np.
import numpy as np

# 2. Print the numpy version and configuration.
print(np.__version__)
np.show_config()

# 3. Create a null vector of size 10.
a = np.zeros(10)
print(a)

# 4. How to find the memory size of any array?
z = np.zeros((10, 10))
print("%d bytes" % (z.size * z.itemsize))

# 5. How to get the documentation of the numpy add function from the command line?
np.info(np.add)

# 6. Create a null vector of size 10 but the fifth value which is 1.
z = np.empty(10)
z[4] = 1
print(z)

# 7. Create a vector with values ranging from 10 to 49.
z = np.arange(10, 50)
print(z)

# 8. Reverse a vector.
z = np.arange(0, 10)
print(z)
print(z[::-1])

# 9. Create a 3x3 matrix with values ranging from 0 to 8.
z = np.arange(9).reshape((3, -1))
print(z)

# 10. Find indices of non-zero elements from [1,2,0,0,4,0].
print(np.nonzero([1, 2, 0, 0, 4, 0]))

# 11. Create a 3x3 identity matrix.
z = np.eye(3)
print(z)

# 12.  Create a 3x3x3 array with random values.
z = np.random.random((3, 3, 3))  # Create with uniform distribution
print(z)
# Three-by-two array of random numbers from [-5, 0)
z = 5 * np.random.random((3, 2)) - 5

# 13. Create a 10X10 array with random values and find the minimum and maximum values.
z = np.random.random((10, 10))
print(z)
print('Maximum:', z.max())
print('Minimum:', z.min())

# 14. Create a random vector of size 30 and find the mean value.
z = np.random.random(30)
print(z.mean())

# 15. Create a 2d array with 1 on border and 0 inside.
z = np.ones((3, 3))
z[1:-1, 1:-1] = 0
print(z)

# 16. How to add a border (fill with 0's) around an existing array?
z = np.ones((5, 5))
print(np.pad(z, 1, mode='constant', constant_values=0))

# 17. What is the result of the following expression?
# 0 * np.nan
# np.nan == np.nan
# np.inf > np.nan
# np.nan - np.nan
# np.nan in set([np.nan])
# 0.3 ==3 * 0.1
print(0 * np.nan)
print(np.nan == np.nan)
print(np.inf > np.nan)
print(np.nan - np.nan)
print(np.nan in set([np.nan]))
print(0.3 == 3 * 0.1)

# 18. Create a 5x5 matrix with values 1,2,3,4 just below the diagonal.
print(np.diag([1, 2, 3, 4], -1))

# 19. Create a 8x8 matrix and fill it with a checkerboard pattern.
z = np.zeros((8, 8))
z[::2, ::2] = 1
z[1::2, 1::2] = 1
print(z)

# 20. Consider a (6,7,8) shape array, what is the index (x,y,z) of the 100th element.
print(np.unravel_index(100, (6, 7, 8)))

# 21. Create a checkerboard 8x8 matrix using the tile function.
print(np.tile([[0,1], [0,1]], (4,4)))

# 22. Normalize a 5x5 random matrix.
z = np.random.random((5,5))
z = (z - np.mean(z)) / np.std(z)
print(z)

# 23. Create a custom dtype that describes a color as four unsigned bytes (RGBA).
print(np.dtype([('R', np.ubyte, 1), ('G', np.ubyte, 1), ('B', np.ubyte, 1), ('A', np.ubyte, 1)]))

# 24. Multiply a 5x3 matrix by a 3x2 matrix (real matrix product).
a = np.random.random((5,3))
b = np.random.random((3,2))
print(np.dot(a,b))
print(a @ b)

# 25. Given a 1D array, negate all elements which are between 3 and 8, in place.
z = np. arange(1, 15)
z[(3 <= z) & (z <= 8)] *= -1
print(z)

# 26. What is the output of the following script?
print(sum(range(5), -1))
from numpy import *
print(sum(range(5), -1)) # np.sum((range(5), -1)) -1 -> axis = -1

# 27. Consider an integer vector Z, which of these expressions are legal?
Z = np.random.random(1)
Z ** Z
# 2 << Z >> 2 # inlegal
Z <- Z
1j * Z
Z/1/1
Z<Z>Z

# 28. What are the result of the following expressions?
print(np.array(0) / np.array(0))
print(np.array(0) // np.array(0))
print(np.array([np.nan]).astype(int).astype(float))

# 29. How to round away from zero a float array?
z = np.random.uniform(-10, 10, 10)
print(z)
print(np.ceil(z))

# 30. How to find common values between two arrays?
a = np.arange(10)
b = np.arange(5, 15)
print(np.intersect1d(a, b))

# 31. How to ignore all numpy warnings(not recommanded)?
# defaults = np.seterr(all="ignore")

# 32. Is the following expressions true?
print(np.sqrt(-1))
print(np.emath.sqrt(-1))
print(np.sqrt(-1) == np.emath.sqrt(-1))

# 33. How to get the dates of yesterday, today and tomorrow?
yesterday = np.datetime64('today', 'D') - np.timedelta64(1, 'D')
today = np.datetime64('today')
tomorrow = np.datetime64('today', 'D') + np.timedelta64(1, 'D')
print(yesterday, today, tomorrow)

# 34. How to get all the dates corresponding to the month of July 2016?
print(np.arange('2016-07', '2016-08', dtype = 'datetime64[D]'))

# 35. How to compute ((A+B)*(-A/2)) in place (without copy)?
A = np.ones(3) * 1
B = np.ones(3) * 2
np.add(A, B, out = B)
np.divide(A, 2, out = A)
np.negative(A, out = A)
print(np.multiply(A, B, out = A))

# 36. Extract the integer part of a random array using 5 different methods
z = np.random.random(10)*10 - 2
# method 1:
print(np.ceil(z))
# method 2:
print(z.astype(int))